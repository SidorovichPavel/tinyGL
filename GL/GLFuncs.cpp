#include "GLFuncs.hpp"

namespace tgl::gl
{
	#define GL_FUNC_DECL(type, name) tgl_func<type>::func_t name;

	GL_FUNC_DECL(PFNGLGENBUFFERSPROC, gen_buffers);
	GL_FUNC_DECL(PFNGLBINDBUFFERPROC, bind_buffer);
	GL_FUNC_DECL(PFNGLBUFFERDATAPROC, buffer_data);
	GL_FUNC_DECL(PFNGLDELETEBUFFERSPROC, delete_buffers);

	GL_FUNC_DECL(PFNGLGENVERTEXARRAYSPROC, gen_vertex_arrays);
	GL_FUNC_DECL(PFNGLDELETEVERTEXARRAYSPROC, delete_vertex_arrays);
	GL_FUNC_DECL(PFNGLVERTEXATTRIBPOINTERPROC, vertex_attrib_pointer);
	GL_FUNC_DECL(PFNGLBINDVERTEXARRAYPROC, bind_vertex_array);
	GL_FUNC_DECL(PFNGLENABLEVERTEXATTRIBARRAYPROC, enable_vertex_attrib_array);
	GL_FUNC_DECL(PFNGLDISABLEVERTEXATTRIBARRAYPROC, disable_vertex_attrib_array);

	GL_FUNC_DECL(PFNGLCREATEPROGRAMPROC, create_program);
	GL_FUNC_DECL(PFNGLDELETEPROGRAMPROC, delete_program);
	GL_FUNC_DECL(PFNGLCREATESHADERPROC, create_shader);
	GL_FUNC_DECL(PFNGLSHADERSOURCEPROC, shader_source);
	GL_FUNC_DECL(PFNGLCOMPILESHADERPROC, compile_shader);
	GL_FUNC_DECL(PFNGLGETSHADERIVPROC, get_shaderiv);
	GL_FUNC_DECL(PFNGLATTACHSHADERPROC, attach_shader);
	GL_FUNC_DECL(PFNGLLINKPROGRAMPROC, link_program);
	GL_FUNC_DECL(PFNGLUSEPROGRAMPROC, use_program);
	GL_FUNC_DECL(PFNGLDELETESHADERPROC, delete_shader);
	GL_FUNC_DECL(PFNGLDETACHSHADERPROC, detach_shader);
	GL_FUNC_DECL(PFNGLGETSHADERINFOLOGPROC, get_shader_info_log);
	GL_FUNC_DECL(PFNGLBINDATTRIBLOCATIONPROC, bind_attrib_location);
	GL_FUNC_DECL(PFNGLGETUNIFORMLOCATIONPROC, get_uniform_location);

	GL_FUNC_DECL(PFNGLUNIFORMMATRIX4FVPROC, uniform_matrix_4fv);
	GL_FUNC_DECL(PFNGLUNIFORM4FVPROC, uniform_4fv);
	GL_FUNC_DECL(PFNGLUNIFORM3FVPROC, uniform_3fv);
	GL_FUNC_DECL(PFNGLUNIFORM4FPROC, uniform_4f);
	GL_FUNC_DECL(PFNGLUNIFORM1IPROC, uniform_1i);

	GL_FUNC_DECL(PFNGLACTIVETEXTUREPROC, active_texture);
	GL_FUNC_DECL(PFNGLGENERATEMIPMAPPROC, generate_mipmap);

	GL_FUNC_DECL(PFNGLDEBUGMESSAGECALLBACKPROC, debug_message_callback);
}